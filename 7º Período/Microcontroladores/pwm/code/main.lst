CCS PCM C Compiler, Version 5.015, 5967               25-abr-18 11:01

               Filename:   D:\engenharia\7º Período\Microcontroladores\pwm\code\main.lst

               ROM used:   151 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   028
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  MOVLW  10
0005:  MOVWF  29
0006:  CLRF   77
0007:  CLRF   7A
0008:  RRF    26,F
0009:  RRF    25,F
000A:  BTFSS  03.0
000B:  GOTO   012
000C:  MOVF   27,W
000D:  ADDWF  77,F
000E:  BTFSC  03.0
000F:  INCF   7A,F
0010:  MOVF   28,W
0011:  ADDWF  7A,F
0012:  RRF    7A,F
0013:  RRF    77,F
0014:  RRF    79,F
0015:  RRF    78,F
0016:  DECFSZ 29,F
0017:  GOTO   008
0018:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0019:  MOVLW  03
001A:  SUBWF  28,F
001B:  BTFSS  03.0
001C:  GOTO   027
001D:  MOVLW  28
001E:  MOVWF  04
001F:  BCF    03.7
0020:  MOVF   00,W
0021:  BTFSC  03.2
0022:  GOTO   027
0023:  GOTO   025
0024:  GOTO   025
0025:  DECFSZ 00,F
0026:  GOTO   024
0027:  RETURN
.................... #use FIXED_IO( C_outputs=PIN_C2 ) 
....................  
....................  
.................... #include <stdint.h> 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                                                                   //// 
.................... ////                           stdint.h                                //// 
.................... ////                                                                   //// 
.................... //// Standard integer definitions.                                     //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2008 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifndef _STDINT 
....................  
.................... #define _STDINT 
....................  
.................... //////////// exact width 
....................  
.................... typedef signed int8 int8_t; 
.................... typedef unsigned int8 uint8_t; 
.................... typedef signed int16 int16_t; 
.................... typedef unsigned int16 uint16_t; 
.................... typedef signed int32 int32_t; 
.................... typedef unsigned int32 uint32_t; 
....................  
.................... #if defined(__PCD__) 
.................... //typedef signed int24 int24_t; 
.................... //typedef unsigned int24 uint24_t; 
.................... typedef signed int64 int64_t; 
.................... typedef unsigned int64 uint64_t; 
.................... #endif 
....................  
.................... #define INT8_MAX  (128) 
.................... #define INT8_MIN  (-127) 
.................... #define UINT8_MAX (255) 
....................  
.................... #define INT16_MAX  (32767) 
.................... #define INT16_MIN  (-32768) 
.................... #define UINT16_MAX (65535) 
....................  
.................... #define INT32_MAX  (2147483647) 
.................... #define INT32_MIN  (-2147483648) 
.................... #define UINT32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT24_MAX  (8388607) 
.................... //#define INT24_MIN  (-8388608) 
.................... //#define UINT24_MAX (16777215) 
....................  
.................... #define INT64_MAX  (9223372036854775807) 
.................... #define INT64_MIN  (-9223372036854775808) 
.................... #define UINT64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... ///////// minimum width 
....................  
.................... typedef signed int8 int_least8_t; 
.................... typedef unsigned int8 uint_least8_t; 
.................... typedef signed int16 int_least16_t; 
.................... typedef unsigned int16 uint_least16_t; 
.................... typedef signed int32 int_least32_t; 
.................... typedef unsigned int32 uint_least32_t; 
....................  
.................... #if defined(__PCD__) 
.................... //typedef signed int24 int_least24_t; 
.................... //typedef unsigned int24 uint_least24_t; 
.................... typedef signed int64 int_least64_t; 
.................... typedef unsigned int64 uint_least64_t; 
.................... #endif 
....................  
.................... #define INT_LEAST8_MAX  (128) 
.................... #define INT_LEAST8_MIN  (-127) 
.................... #define UINT_LEAST8_MAX (255) 
....................  
.................... #define INT_LEAST16_MAX  (32767) 
.................... #define INT_LEAST16_MIN  (-32768) 
.................... #define UINT_LEAST16_MAX (65535) 
....................  
.................... #define INT_LEAST32_MAX  (2147483647) 
.................... #define INT_LEAST32_MIN  (-2147483648) 
.................... #define UINT_LEAST32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT_LEAST24_MAX  (8388607) 
.................... //#define INT_LEAST24_MIN  (-8388608) 
.................... //#define UINT_LEAST24_MAX (16777215) 
....................  
.................... #define INT_LEAST64_MAX  (9223372036854775807) 
.................... #define INT_LEAST64_MIN  (-9223372036854775808) 
.................... #define UINT_LEAST64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... ///////// fastest width 
....................  
.................... #if defined(__PCD__) 
.................... typedef signed int16 int_fast8_t; 
.................... typedef unsigned int16 uint_fast8_t; 
.................... #define INT_FAST8_MAX  (32767) 
.................... #define INT_FAST8_MIN  (-32768) 
.................... #define UINT_FAST8_MAX (65535) 
.................... typedef signed int16 int_fast16_t; 
.................... typedef unsigned int16 uint_fast16_t; 
.................... //typedef signed int24 int_fast24_t; 
.................... //typedef unsigned int24 uint_fast24_t; 
.................... typedef signed int64 int_fast64_t; 
.................... typedef unsigned int64 uint_fast64_t; 
.................... #else 
.................... typedef signed int8 int_fast8_t; 
.................... typedef unsigned int8 uint_fast8_t; 
.................... #define INT_FAST8_MAX  (128) 
.................... #define INT_FAST8_MIN  (-127) 
.................... #define UINT_FAST8_MAX (255) 
.................... typedef signed int16 int_fast16_t; 
.................... typedef unsigned int16 uint_fast16_t; 
.................... #endif 
....................  
.................... typedef signed int32 int_fast32_t; 
.................... typedef unsigned int32 uint_fast32_t; 
....................  
.................... #define INT_FAST16_MAX  (32767) 
.................... #define INT_FAST16_MIN  (-32768) 
.................... #define UINT_FAST16_MAX (65535) 
....................  
.................... #define INT_FAST32_MAX  (2147483647) 
.................... #define INT_FAST32_MIN  (-2147483648) 
.................... #define UINT_FAST32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT_FAST24_MAX  (8388607) 
.................... //#define INT_FAST24_MIN  (-8388608) 
.................... //#define UINT_FAST24_MAX (16777215) 
....................  
.................... #define INT_FAST64_MAX  (9223372036854775807) 
.................... #define INT_FAST64_MIN  (-9223372036854775808) 
.................... #define UINT_FAST64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... //////////// big enough to hold pointers (OPTIONAL) 
....................  
.................... /// TODO 
....................  
.................... /// intptr_t uintptr_t 
....................  
.................... /// INTPTRN_MIN INTPTRN_MAX UINTPTRN_MAX 
....................  
....................  
.................... /////////// greatest width (OPTIONAL) 
....................  
.................... /// TODO 
....................  
.................... /// intmax_t uintmax_t 
....................  
.................... /// INTMAXN_MIN INTMAXN_MAX UINTMAXN_MAX 
....................  
.................... /// INTMAX_C(value) UINTMAX_C(value) 
....................  
....................  
.................... #endif 
....................  
....................  
.................... void main() 
0028:  MOVF   03,W
0029:  ANDLW  1F
002A:  MOVWF  03
002B:  BSF    03.5
002C:  BSF    1F.0
002D:  BSF    1F.1
002E:  BSF    1F.2
002F:  BCF    1F.3
0030:  MOVLW  07
0031:  MOVWF  1C
0032:  BCF    03.7
.................... { 
....................    while(TRUE) 
....................    { 
....................       // Should take 3000ms 
....................       // Each 100ms it should update the Pulse Width 
....................       output_low(PIN_C2); 
0033:  MOVLW  FB
0034:  MOVWF  07
0035:  BCF    03.5
0036:  BCF    07.2
....................       // External Loop 
....................       // 30 times 
....................       for (uint16_t i = 0; i < 30; i++) { 
0037:  CLRF   22
0038:  CLRF   21
0039:  MOVF   22,F
003A:  BTFSS  03.2
003B:  GOTO   094
003C:  MOVF   21,W
003D:  SUBLW  1D
003E:  BTFSS  03.0
003F:  GOTO   094
....................          // Internal loop 
....................          // Should take 100ms 
....................          for (uint16_t j = 0; j < 100; j++) { 
0040:  CLRF   24
0041:  CLRF   23
0042:  MOVF   24,F
0043:  BTFSS  03.2
0044:  GOTO   090
0045:  MOVF   23,W
0046:  SUBLW  63
0047:  BTFSS  03.0
0048:  GOTO   090
....................             output_high(PIN_C2); 
0049:  MOVLW  FB
004A:  BSF    03.5
004B:  MOVWF  07
004C:  BCF    03.5
004D:  BSF    07.2
....................             delay_us(i*(1000/30)); 
004E:  MOVF   22,W
004F:  MOVWF  26
0050:  MOVF   21,W
0051:  MOVWF  25
0052:  CLRF   28
0053:  MOVLW  21
0054:  MOVWF  27
0055:  CALL   004
0056:  MOVF   79,W
0057:  MOVWF  26
0058:  MOVF   78,W
0059:  MOVWF  25
005A:  MOVF   26,W
005B:  MOVWF  27
005C:  INCF   27,F
005D:  DECF   27,F
005E:  BTFSC  03.2
005F:  GOTO   064
0060:  MOVLW  FF
0061:  MOVWF  28
0062:  CALL   019
0063:  GOTO   05D
0064:  MOVF   25,W
0065:  MOVWF  28
0066:  CALL   019
....................             output_low(PIN_C2); 
0067:  MOVLW  FB
0068:  BSF    03.5
0069:  MOVWF  07
006A:  BCF    03.5
006B:  BCF    07.2
....................             delay_us(1000-(i*(1000/30))); 
006C:  MOVF   22,W
006D:  MOVWF  26
006E:  MOVF   21,W
006F:  MOVWF  25
0070:  CLRF   28
0071:  MOVLW  21
0072:  MOVWF  27
0073:  CALL   004
0074:  MOVF   79,W
0075:  MOVWF  7A
0076:  MOVF   78,W
0077:  SUBLW  E8
0078:  MOVWF  25
0079:  MOVLW  03
007A:  MOVWF  26
007B:  MOVF   7A,W
007C:  BTFSS  03.0
007D:  INCFSZ 7A,W
007E:  SUBWF  26,F
007F:  MOVF   26,W
0080:  MOVWF  27
0081:  INCF   27,F
0082:  DECF   27,F
0083:  BTFSC  03.2
0084:  GOTO   089
0085:  MOVLW  FF
0086:  MOVWF  28
0087:  CALL   019
0088:  GOTO   082
0089:  MOVF   25,W
008A:  MOVWF  28
008B:  CALL   019
008C:  INCF   23,F
008D:  BTFSC  03.2
008E:  INCF   24,F
008F:  GOTO   042
....................          } 
0090:  INCF   21,F
0091:  BTFSC  03.2
0092:  INCF   22,F
0093:  GOTO   039
....................       } 
0094:  BSF    03.5
0095:  GOTO   033
....................    } 
....................  
.................... } 
0096:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
