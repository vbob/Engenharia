CCS PCM C Compiler, Version 5.015, 5967               14-jun-18 15:06

               Filename:   D:\engenharia\7º Período\Microcontroladores\rs232\2_potenciometros\main.lst

               ROM used:   118 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           11 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=16000000) 
0004:  MOVLW  26
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  05
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  2E
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  19
001D:  BSF    03.5
001E:  MOVWF  19
001F:  MOVLW  A2
0020:  MOVWF  18
0021:  MOVLW  90
0022:  BCF    03.5
0023:  MOVWF  18
0024:  BSF    03.5
0025:  BSF    1F.0
0026:  BSF    1F.1
0027:  BSF    1F.2
0028:  BCF    1F.3
0029:  MOVLW  07
002A:  MOVWF  1C
002B:  BCF    03.7
.................... { 
....................    setup_adc_ports(AN0_AN1_AN3); 
002C:  BCF    1F.0
002D:  BCF    1F.1
002E:  BSF    1F.2
002F:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_32); 
0030:  BCF    1F.6
0031:  BCF    03.5
0032:  BCF    1F.6
0033:  BSF    1F.7
0034:  BSF    03.5
0035:  BSF    1F.7
0036:  BCF    03.5
0037:  BSF    1F.0
....................     
....................    long value; 
....................    int bit1 = 0; 
....................    int bit2 = 0; 
0038:  CLRF   23
0039:  CLRF   24
....................     
....................    while(TRUE) 
....................    { 
....................       set_adc_channel(0); 
003A:  MOVLW  00
003B:  MOVWF  78
003C:  MOVF   1F,W
003D:  ANDLW  C7
003E:  IORWF  78,W
003F:  MOVWF  1F
....................       delay_ms(1); 
0040:  MOVLW  01
0041:  MOVWF  26
0042:  CALL   004
....................       value=read_adc(); 
0043:  BSF    1F.2
0044:  BTFSC  1F.2
0045:  GOTO   044
0046:  BSF    03.5
0047:  MOVF   1E,W
0048:  BCF    03.5
0049:  MOVWF  21
004A:  MOVF   1E,W
004B:  MOVWF  22
....................       putc(value); 
004C:  MOVF   21,W
004D:  BTFSS  0C.4
004E:  GOTO   04D
004F:  MOVWF  19
....................       delay_ms(1000); 
0050:  MOVLW  04
0051:  MOVWF  25
0052:  MOVLW  FA
0053:  MOVWF  26
0054:  CALL   004
0055:  DECFSZ 25,F
0056:  GOTO   052
....................        
....................       set_adc_channel(1); 
0057:  MOVLW  08
0058:  MOVWF  78
0059:  MOVF   1F,W
005A:  ANDLW  C7
005B:  IORWF  78,W
005C:  MOVWF  1F
....................       delay_ms(1); 
005D:  MOVLW  01
005E:  MOVWF  26
005F:  CALL   004
....................       value=read_adc(); 
0060:  BSF    1F.2
0061:  BTFSC  1F.2
0062:  GOTO   061
0063:  BSF    03.5
0064:  MOVF   1E,W
0065:  BCF    03.5
0066:  MOVWF  21
0067:  MOVF   1E,W
0068:  MOVWF  22
....................       putc(value); 
0069:  MOVF   21,W
006A:  BTFSS  0C.4
006B:  GOTO   06A
006C:  MOVWF  19
....................       delay_ms(1000); 
006D:  MOVLW  04
006E:  MOVWF  25
006F:  MOVLW  FA
0070:  MOVWF  26
0071:  CALL   004
0072:  DECFSZ 25,F
0073:  GOTO   06F
0074:  GOTO   03A
....................    } 
.................... } 
0075:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
