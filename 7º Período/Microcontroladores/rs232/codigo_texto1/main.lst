CCS PCM C Compiler, Version 5.008, 5967               08-jun-18 10:36

               Filename:   C:\Users\vbob\Desktop\Engenharia\7º Período\Microcontroladores\rs232\codigo_texto1\main.lst

               ROM used:   188 words (9%)
                           Largest free fragment is 1860
               RAM used:   26 (12%) at main() level
                           33 (15%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   07D
0003:  NOP
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
0004:  MOVF   3A,W
0005:  CLRF   78
0006:  SUBWF  39,W
0007:  BTFSC  03.0
0008:  GOTO   00C
0009:  MOVF   39,W
000A:  MOVWF  77
000B:  GOTO   018
000C:  CLRF   77
000D:  MOVLW  08
000E:  MOVWF  3B
000F:  RLF    39,F
0010:  RLF    77,F
0011:  MOVF   3A,W
0012:  SUBWF  77,W
0013:  BTFSC  03.0
0014:  MOVWF  77
0015:  RLF    78,F
0016:  DECFSZ 3B,F
0017:  GOTO   00F
0018:  RETURN
0019:  MOVF   20,W
001A:  MOVWF  04
001B:  BCF    03.7
001C:  BTFSC  21.0
001D:  BSF    03.7
001E:  MOVF   39,W
001F:  MOVWF  00
0020:  INCF   04,F
0021:  CLRF   00
0022:  INCF   20,F
0023:  BTFSC  03.2
0024:  INCF   21,F
0025:  RETURN
0026:  MOVLW  20
0027:  BTFSS  34.4
0028:  MOVLW  30
0029:  MOVWF  35
002A:  MOVF   33,W
002B:  MOVWF  77
002C:  BTFSS  33.7
002D:  GOTO   036
002E:  COMF   77,F
002F:  INCF   77,F
0030:  MOVF   77,W
0031:  MOVWF  33
0032:  MOVLW  2D
0033:  MOVWF  35
0034:  BSF    34.7
0035:  BSF    34.0
0036:  MOVF   33,W
0037:  MOVWF  39
0038:  MOVLW  64
0039:  MOVWF  3A
003A:  CALL   004
003B:  MOVF   77,W
003C:  MOVWF  33
003D:  MOVLW  30
003E:  ADDWF  78,W
003F:  MOVWF  36
0040:  MOVF   33,W
0041:  MOVWF  39
0042:  MOVLW  0A
0043:  MOVWF  3A
0044:  CALL   004
0045:  MOVLW  30
0046:  ADDWF  77,W
0047:  MOVWF  38
0048:  MOVLW  30
0049:  ADDWF  78,W
004A:  MOVWF  37
004B:  MOVF   35,W
004C:  MOVWF  77
004D:  MOVLW  30
004E:  SUBWF  36,W
004F:  BTFSC  03.2
0050:  GOTO   055
0051:  BSF    34.1
0052:  BTFSC  34.7
0053:  BSF    34.2
0054:  GOTO   069
0055:  MOVF   35,W
0056:  MOVWF  36
0057:  MOVLW  20
0058:  MOVWF  35
0059:  MOVLW  30
005A:  SUBWF  37,W
005B:  BTFSC  03.2
005C:  GOTO   061
005D:  BSF    34.0
005E:  BTFSC  34.7
005F:  BSF    34.1
0060:  GOTO   069
0061:  BTFSS  03.2
0062:  BSF    34.0
0063:  BTFSS  03.2
0064:  GOTO   069
0065:  MOVF   36,W
0066:  MOVWF  37
0067:  MOVLW  20
0068:  MOVWF  36
0069:  BTFSC  34.2
006A:  GOTO   070
006B:  BTFSC  34.1
006C:  GOTO   073
006D:  BTFSC  34.0
006E:  GOTO   076
006F:  GOTO   079
0070:  MOVF   35,W
0071:  MOVWF  39
0072:  CALL   019
0073:  MOVF   36,W
0074:  MOVWF  39
0075:  CALL   019
0076:  MOVF   37,W
0077:  MOVWF  39
0078:  CALL   019
0079:  MOVF   38,W
007A:  MOVWF  39
007B:  CALL   019
007C:  GOTO   097 (RETURN)
....................  
.................... #list 
....................  
.................... #include <stdint.h> 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                                                                   //// 
.................... ////                           stdint.h                                //// 
.................... ////                                                                   //// 
.................... //// Standard integer definitions.                                     //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2008 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifndef _STDINT 
....................  
.................... #define _STDINT 
....................  
.................... //////////// exact width 
....................  
.................... typedef signed int8 int8_t; 
.................... typedef unsigned int8 uint8_t; 
.................... typedef signed int16 int16_t; 
.................... typedef unsigned int16 uint16_t; 
.................... typedef signed int32 int32_t; 
.................... typedef unsigned int32 uint32_t; 
....................  
.................... #if defined(__PCD__) 
.................... //typedef signed int24 int24_t; 
.................... //typedef unsigned int24 uint24_t; 
.................... typedef signed int64 int64_t; 
.................... typedef unsigned int64 uint64_t; 
.................... #endif 
....................  
.................... #define INT8_MAX  (128) 
.................... #define INT8_MIN  (-127) 
.................... #define UINT8_MAX (255) 
....................  
.................... #define INT16_MAX  (32767) 
.................... #define INT16_MIN  (-32768) 
.................... #define UINT16_MAX (65535) 
....................  
.................... #define INT32_MAX  (2147483647) 
.................... #define INT32_MIN  (-2147483648) 
.................... #define UINT32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT24_MAX  (8388607) 
.................... //#define INT24_MIN  (-8388608) 
.................... //#define UINT24_MAX (16777215) 
....................  
.................... #define INT64_MAX  (9223372036854775807) 
.................... #define INT64_MIN  (-9223372036854775808) 
.................... #define UINT64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... ///////// minimum width 
....................  
.................... typedef signed int8 int_least8_t; 
.................... typedef unsigned int8 uint_least8_t; 
.................... typedef signed int16 int_least16_t; 
.................... typedef unsigned int16 uint_least16_t; 
.................... typedef signed int32 int_least32_t; 
.................... typedef unsigned int32 uint_least32_t; 
....................  
.................... #if defined(__PCD__) 
.................... //typedef signed int24 int_least24_t; 
.................... //typedef unsigned int24 uint_least24_t; 
.................... typedef signed int64 int_least64_t; 
.................... typedef unsigned int64 uint_least64_t; 
.................... #endif 
....................  
.................... #define INT_LEAST8_MAX  (128) 
.................... #define INT_LEAST8_MIN  (-127) 
.................... #define UINT_LEAST8_MAX (255) 
....................  
.................... #define INT_LEAST16_MAX  (32767) 
.................... #define INT_LEAST16_MIN  (-32768) 
.................... #define UINT_LEAST16_MAX (65535) 
....................  
.................... #define INT_LEAST32_MAX  (2147483647) 
.................... #define INT_LEAST32_MIN  (-2147483648) 
.................... #define UINT_LEAST32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT_LEAST24_MAX  (8388607) 
.................... //#define INT_LEAST24_MIN  (-8388608) 
.................... //#define UINT_LEAST24_MAX (16777215) 
....................  
.................... #define INT_LEAST64_MAX  (9223372036854775807) 
.................... #define INT_LEAST64_MIN  (-9223372036854775808) 
.................... #define UINT_LEAST64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... ///////// fastest width 
....................  
.................... #if defined(__PCD__) 
.................... typedef signed int16 int_fast8_t; 
.................... typedef unsigned int16 uint_fast8_t; 
.................... #define INT_FAST8_MAX  (32767) 
.................... #define INT_FAST8_MIN  (-32768) 
.................... #define UINT_FAST8_MAX (65535) 
.................... typedef signed int16 int_fast16_t; 
.................... typedef unsigned int16 uint_fast16_t; 
.................... //typedef signed int24 int_fast24_t; 
.................... //typedef unsigned int24 uint_fast24_t; 
.................... typedef signed int64 int_fast64_t; 
.................... typedef unsigned int64 uint_fast64_t; 
.................... #else 
.................... typedef signed int8 int_fast8_t; 
.................... typedef unsigned int8 uint_fast8_t; 
.................... #define INT_FAST8_MAX  (128) 
.................... #define INT_FAST8_MIN  (-127) 
.................... #define UINT_FAST8_MAX (255) 
.................... typedef signed int16 int_fast16_t; 
.................... typedef unsigned int16 uint_fast16_t; 
.................... #endif 
....................  
.................... typedef signed int32 int_fast32_t; 
.................... typedef unsigned int32 uint_fast32_t; 
....................  
.................... #define INT_FAST16_MAX  (32767) 
.................... #define INT_FAST16_MIN  (-32768) 
.................... #define UINT_FAST16_MAX (65535) 
....................  
.................... #define INT_FAST32_MAX  (2147483647) 
.................... #define INT_FAST32_MIN  (-2147483648) 
.................... #define UINT_FAST32_MAX (4294967295) 
....................  
.................... #if defined(__PCD__) 
.................... //#define INT_FAST24_MAX  (8388607) 
.................... //#define INT_FAST24_MIN  (-8388608) 
.................... //#define UINT_FAST24_MAX (16777215) 
....................  
.................... #define INT_FAST64_MAX  (9223372036854775807) 
.................... #define INT_FAST64_MIN  (-9223372036854775808) 
.................... #define UINT_FAST64_MAX (18446744073709551615) 
.................... #endif 
....................  
.................... //////////// big enough to hold pointers (OPTIONAL) 
....................  
.................... /// TODO 
....................  
.................... /// intptr_t uintptr_t 
....................  
.................... /// INTPTRN_MIN INTPTRN_MAX UINTPTRN_MAX 
....................  
....................  
.................... /////////// greatest width (OPTIONAL) 
....................  
.................... /// TODO 
....................  
.................... /// intmax_t uintmax_t 
....................  
.................... /// INTMAXN_MIN INTMAXN_MAX UINTMAXN_MAX 
....................  
.................... /// INTMAX_C(value) UINTMAX_C(value) 
....................  
....................  
.................... #endif 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_B2,rcv=PIN_B1,bits=8,stream=PORT1) 
....................  
....................  
.................... void main() 
007D:  MOVF   03,W
007E:  ANDLW  1F
007F:  MOVWF  03
0080:  MOVLW  81
0081:  BSF    03.5
0082:  MOVWF  19
0083:  MOVLW  A6
0084:  MOVWF  18
0085:  MOVLW  90
0086:  BCF    03.5
0087:  MOVWF  18
0088:  CLRF   21
0089:  CLRF   20
008A:  MOVLW  07
008B:  MOVWF  1F
008C:  BCF    03.7
008D:  MOVLW  14
008E:  MOVWF  22
.................... { 
....................    int i = 20; 
....................    char buf[16]; 
....................    sprintf(buf, "%d\n", i); 
008F:  CLRF   21
0090:  MOVLW  23
0091:  MOVWF  20
0092:  MOVF   22,W
0093:  MOVWF  33
0094:  MOVLW  18
0095:  MOVWF  34
0096:  GOTO   026
0097:  MOVLW  0A
0098:  MOVWF  39
0099:  CALL   019
....................    while(TRUE) 
....................    { 
....................       puts(buf); 
009A:  MOVLW  23
009B:  MOVWF  04
009C:  BCF    03.7
009D:  MOVLW  00
009E:  IORWF  00,W
009F:  BTFSC  03.2
00A0:  GOTO   0B2
00A1:  CLRF   34
00A2:  MOVF   04,W
00A3:  MOVWF  33
00A4:  BCF    34.0
00A5:  BTFSC  03.7
00A6:  BSF    34.0
00A7:  MOVF   00,W
00A8:  BTFSS  0C.4
00A9:  GOTO   0A8
00AA:  MOVWF  19
00AB:  MOVF   33,W
00AC:  MOVWF  04
00AD:  BCF    03.7
00AE:  BTFSC  34.0
00AF:  BSF    03.7
00B0:  INCF   04,F
00B1:  GOTO   09D
00B2:  MOVLW  0D
00B3:  BTFSS  0C.4
00B4:  GOTO   0B3
00B5:  MOVWF  19
00B6:  MOVLW  0A
00B7:  BTFSS  0C.4
00B8:  GOTO   0B7
00B9:  MOVWF  19
00BA:  GOTO   09A
....................    } 
....................  
.................... } 
00BB:  SLEEP

Configuration Fuses:
   Word  1: 3F62   NOWDT PUT HS MCLR BROWNOUT NOLVP NOCPD NOPROTECT
